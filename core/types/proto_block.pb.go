// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.3
// source: core/types/proto_block.proto

package types

import (
	common "github.com/dominant-strategies/go-quai/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProtoHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParentHash            []*common.ProtoHash   `protobuf:"bytes,1,rep,name=parent_hash,json=parentHash,proto3" json:"parent_hash,omitempty"`
	UncleHash             *common.ProtoHash     `protobuf:"bytes,2,opt,name=uncle_hash,json=uncleHash,proto3,oneof" json:"uncle_hash,omitempty"`
	EvmRoot               *common.ProtoHash     `protobuf:"bytes,3,opt,name=evm_root,json=evmRoot,proto3,oneof" json:"evm_root,omitempty"`
	TxHash                *common.ProtoHash     `protobuf:"bytes,4,opt,name=tx_hash,json=txHash,proto3,oneof" json:"tx_hash,omitempty"`
	EtxHash               *common.ProtoHash     `protobuf:"bytes,5,opt,name=etx_hash,json=etxHash,proto3,oneof" json:"etx_hash,omitempty"`
	EtxRollupHash         *common.ProtoHash     `protobuf:"bytes,6,opt,name=etx_rollup_hash,json=etxRollupHash,proto3,oneof" json:"etx_rollup_hash,omitempty"`
	ManifestHash          []*common.ProtoHash   `protobuf:"bytes,7,rep,name=manifest_hash,json=manifestHash,proto3" json:"manifest_hash,omitempty"`
	ReceiptHash           *common.ProtoHash     `protobuf:"bytes,8,opt,name=receipt_hash,json=receiptHash,proto3,oneof" json:"receipt_hash,omitempty"`
	Difficulty            []byte                `protobuf:"bytes,9,opt,name=difficulty,proto3,oneof" json:"difficulty,omitempty"`
	ParentEntropy         [][]byte              `protobuf:"bytes,10,rep,name=parent_entropy,json=parentEntropy,proto3" json:"parent_entropy,omitempty"`
	ParentDeltaS          [][]byte              `protobuf:"bytes,11,rep,name=parent_delta_s,json=parentDeltaS,proto3" json:"parent_delta_s,omitempty"`
	ParentUncledSubDeltaS [][]byte              `protobuf:"bytes,12,rep,name=parent_uncled_sub_delta_s,json=parentUncledSubDeltaS,proto3" json:"parent_uncled_sub_delta_s,omitempty"`
	UncledS               []byte                `protobuf:"bytes,13,opt,name=uncled_s,json=uncledS,proto3,oneof" json:"uncled_s,omitempty"`
	Number                [][]byte              `protobuf:"bytes,14,rep,name=number,proto3" json:"number,omitempty"`
	GasLimit              *uint64               `protobuf:"varint,15,opt,name=gas_limit,json=gasLimit,proto3,oneof" json:"gas_limit,omitempty"`
	GasUsed               *uint64               `protobuf:"varint,16,opt,name=gas_used,json=gasUsed,proto3,oneof" json:"gas_used,omitempty"`
	BaseFee               []byte                `protobuf:"bytes,17,opt,name=base_fee,json=baseFee,proto3,oneof" json:"base_fee,omitempty"`
	Location              *common.ProtoLocation `protobuf:"bytes,18,opt,name=location,proto3,oneof" json:"location,omitempty"`
	Extra                 []byte                `protobuf:"bytes,19,opt,name=extra,proto3,oneof" json:"extra,omitempty"`
	MixHash               *common.ProtoHash     `protobuf:"bytes,20,opt,name=mix_hash,json=mixHash,proto3,oneof" json:"mix_hash,omitempty"`
	Nonce                 *uint64               `protobuf:"varint,21,opt,name=nonce,proto3,oneof" json:"nonce,omitempty"`
	UtxoRoot              *common.ProtoHash     `protobuf:"bytes,22,opt,name=utxo_root,json=utxoRoot,proto3,oneof" json:"utxo_root,omitempty"`
	EtxSetRoot            *common.ProtoHash     `protobuf:"bytes,23,opt,name=etx_set_root,json=etxSetRoot,proto3,oneof" json:"etx_set_root,omitempty"`
	EfficiencyScore       *uint64               `protobuf:"varint,24,opt,name=efficiency_score,json=efficiencyScore,proto3,oneof" json:"efficiency_score,omitempty"`
	ThresholdCount        *uint64               `protobuf:"varint,25,opt,name=threshold_count,json=thresholdCount,proto3,oneof" json:"threshold_count,omitempty"`
	ExpansionNumber       *uint64               `protobuf:"varint,26,opt,name=expansion_number,json=expansionNumber,proto3,oneof" json:"expansion_number,omitempty"`
	EtxEligibleSlices     *common.ProtoHash     `protobuf:"bytes,27,opt,name=etx_eligible_slices,json=etxEligibleSlices,proto3,oneof" json:"etx_eligible_slices,omitempty"`
	PrimeTerminus         *common.ProtoHash     `protobuf:"bytes,28,opt,name=prime_terminus,json=primeTerminus,proto3,oneof" json:"prime_terminus,omitempty"`
	InterlinkRootHash     *common.ProtoHash     `protobuf:"bytes,29,opt,name=interlink_root_hash,json=interlinkRootHash,proto3,oneof" json:"interlink_root_hash,omitempty"`
	StateLimit            *uint64               `protobuf:"varint,30,opt,name=state_limit,json=stateLimit,proto3,oneof" json:"state_limit,omitempty"`
	StateUsed             *uint64               `protobuf:"varint,31,opt,name=state_used,json=stateUsed,proto3,oneof" json:"state_used,omitempty"`
	QuaiStateSize         []byte                `protobuf:"bytes,32,opt,name=quai_state_size,json=quaiStateSize,proto3,oneof" json:"quai_state_size,omitempty"`
}

func (x *ProtoHeader) Reset() {
	*x = ProtoHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_types_proto_block_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoHeader) ProtoMessage() {}

func (x *ProtoHeader) ProtoReflect() protoreflect.Message {
	mi := &file_core_types_proto_block_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoHeader.ProtoReflect.Descriptor instead.
func (*ProtoHeader) Descriptor() ([]byte, []int) {
	return file_core_types_proto_block_proto_rawDescGZIP(), []int{0}
}

func (x *ProtoHeader) GetParentHash() []*common.ProtoHash {
	if x != nil {
		return x.ParentHash
	}
	return nil
}

func (x *ProtoHeader) GetUncleHash() *common.ProtoHash {
	if x != nil {
		return x.UncleHash
	}
	return nil
}

func (x *ProtoHeader) GetEvmRoot() *common.ProtoHash {
	if x != nil {
		return x.EvmRoot
	}
	return nil
}

func (x *ProtoHeader) GetTxHash() *common.ProtoHash {
	if x != nil {
		return x.TxHash
	}
	return nil
}

func (x *ProtoHeader) GetEtxHash() *common.ProtoHash {
	if x != nil {
		return x.EtxHash
	}
	return nil
}

func (x *ProtoHeader) GetEtxRollupHash() *common.ProtoHash {
	if x != nil {
		return x.EtxRollupHash
	}
	return nil
}

func (x *ProtoHeader) GetManifestHash() []*common.ProtoHash {
	if x != nil {
		return x.ManifestHash
	}
	return nil
}

func (x *ProtoHeader) GetReceiptHash() *common.ProtoHash {
	if x != nil {
		return x.ReceiptHash
	}
	return nil
}

func (x *ProtoHeader) GetDifficulty() []byte {
	if x != nil {
		return x.Difficulty
	}
	return nil
}

func (x *ProtoHeader) GetParentEntropy() [][]byte {
	if x != nil {
		return x.ParentEntropy
	}
	return nil
}

func (x *ProtoHeader) GetParentDeltaS() [][]byte {
	if x != nil {
		return x.ParentDeltaS
	}
	return nil
}

func (x *ProtoHeader) GetParentUncledSubDeltaS() [][]byte {
	if x != nil {
		return x.ParentUncledSubDeltaS
	}
	return nil
}

func (x *ProtoHeader) GetUncledS() []byte {
	if x != nil {
		return x.UncledS
	}
	return nil
}

func (x *ProtoHeader) GetNumber() [][]byte {
	if x != nil {
		return x.Number
	}
	return nil
}

func (x *ProtoHeader) GetGasLimit() uint64 {
	if x != nil && x.GasLimit != nil {
		return *x.GasLimit
	}
	return 0
}

func (x *ProtoHeader) GetGasUsed() uint64 {
	if x != nil && x.GasUsed != nil {
		return *x.GasUsed
	}
	return 0
}

func (x *ProtoHeader) GetBaseFee() []byte {
	if x != nil {
		return x.BaseFee
	}
	return nil
}

func (x *ProtoHeader) GetLocation() *common.ProtoLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *ProtoHeader) GetExtra() []byte {
	if x != nil {
		return x.Extra
	}
	return nil
}

func (x *ProtoHeader) GetMixHash() *common.ProtoHash {
	if x != nil {
		return x.MixHash
	}
	return nil
}

func (x *ProtoHeader) GetNonce() uint64 {
	if x != nil && x.Nonce != nil {
		return *x.Nonce
	}
	return 0
}

func (x *ProtoHeader) GetUtxoRoot() *common.ProtoHash {
	if x != nil {
		return x.UtxoRoot
	}
	return nil
}

func (x *ProtoHeader) GetEtxSetRoot() *common.ProtoHash {
	if x != nil {
		return x.EtxSetRoot
	}
	return nil
}

func (x *ProtoHeader) GetEfficiencyScore() uint64 {
	if x != nil && x.EfficiencyScore != nil {
		return *x.EfficiencyScore
	}
	return 0
}

func (x *ProtoHeader) GetThresholdCount() uint64 {
	if x != nil && x.ThresholdCount != nil {
		return *x.ThresholdCount
	}
	return 0
}

func (x *ProtoHeader) GetExpansionNumber() uint64 {
	if x != nil && x.ExpansionNumber != nil {
		return *x.ExpansionNumber
	}
	return 0
}

func (x *ProtoHeader) GetEtxEligibleSlices() *common.ProtoHash {
	if x != nil {
		return x.EtxEligibleSlices
	}
	return nil
}

func (x *ProtoHeader) GetPrimeTerminus() *common.ProtoHash {
	if x != nil {
		return x.PrimeTerminus
	}
	return nil
}

func (x *ProtoHeader) GetInterlinkRootHash() *common.ProtoHash {
	if x != nil {
		return x.InterlinkRootHash
	}
	return nil
}

func (x *ProtoHeader) GetStateLimit() uint64 {
	if x != nil && x.StateLimit != nil {
		return *x.StateLimit
	}
	return 0
}

func (x *ProtoHeader) GetStateUsed() uint64 {
	if x != nil && x.StateUsed != nil {
		return *x.StateUsed
	}
	return 0
}

func (x *ProtoHeader) GetQuaiStateSize() []byte {
	if x != nil {
		return x.QuaiStateSize
	}
	return nil
}

type ProtoTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type              *uint64           `protobuf:"varint,1,opt,name=type,proto3,oneof" json:"type,omitempty"`
	To                []byte            `protobuf:"bytes,2,opt,name=to,proto3,oneof" json:"to,omitempty"`
	Nonce             *uint64           `protobuf:"varint,3,opt,name=nonce,proto3,oneof" json:"nonce,omitempty"`
	Value             []byte            `protobuf:"bytes,4,opt,name=value,proto3,oneof" json:"value,omitempty"`
	Gas               *uint64           `protobuf:"varint,5,opt,name=gas,proto3,oneof" json:"gas,omitempty"`
	Data              []byte            `protobuf:"bytes,6,opt,name=data,proto3,oneof" json:"data,omitempty"`
	ChainId           []byte            `protobuf:"bytes,7,opt,name=chain_id,json=chainId,proto3,oneof" json:"chain_id,omitempty"`
	GasFeeCap         []byte            `protobuf:"bytes,8,opt,name=gas_fee_cap,json=gasFeeCap,proto3,oneof" json:"gas_fee_cap,omitempty"`
	GasTipCap         []byte            `protobuf:"bytes,9,opt,name=gas_tip_cap,json=gasTipCap,proto3,oneof" json:"gas_tip_cap,omitempty"`
	AccessList        *ProtoAccessList  `protobuf:"bytes,10,opt,name=access_list,json=accessList,proto3,oneof" json:"access_list,omitempty"`
	V                 []byte            `protobuf:"bytes,11,opt,name=v,proto3,oneof" json:"v,omitempty"`
	R                 []byte            `protobuf:"bytes,12,opt,name=r,proto3,oneof" json:"r,omitempty"`
	S                 []byte            `protobuf:"bytes,13,opt,name=s,proto3,oneof" json:"s,omitempty"`
	OriginatingTxHash *common.ProtoHash `protobuf:"bytes,14,opt,name=originating_tx_hash,json=originatingTxHash,proto3,oneof" json:"originating_tx_hash,omitempty"`
	EtxIndex          *uint32           `protobuf:"varint,15,opt,name=etx_index,json=etxIndex,proto3,oneof" json:"etx_index,omitempty"`
	TxIns             *ProtoTxIns       `protobuf:"bytes,16,opt,name=tx_ins,json=txIns,proto3,oneof" json:"tx_ins,omitempty"`
	TxOuts            *ProtoTxOuts      `protobuf:"bytes,17,opt,name=tx_outs,json=txOuts,proto3,oneof" json:"tx_outs,omitempty"`
	Signature         []byte            `protobuf:"bytes,18,opt,name=signature,proto3,oneof" json:"signature,omitempty"`
	EtxSender         []byte            `protobuf:"bytes,19,opt,name=etx_sender,json=etxSender,proto3,oneof" json:"etx_sender,omitempty"`
	ParentHash        *common.ProtoHash `protobuf:"bytes,20,opt,name=parent_hash,json=parentHash,proto3,oneof" json:"parent_hash,omitempty"`
	MixHash           *common.ProtoHash `protobuf:"bytes,21,opt,name=mix_hash,json=mixHash,proto3,oneof" json:"mix_hash,omitempty"`
	WorkNonce         *uint64           `protobuf:"varint,22,opt,name=work_nonce,json=workNonce,proto3,oneof" json:"work_nonce,omitempty"`
	IsCoinbase        *bool             `protobuf:"varint,23,opt,name=is_coinbase,json=isCoinbase,proto3,oneof" json:"is_coinbase,omitempty"`
}

func (x *ProtoTransaction) Reset() {
	*x = ProtoTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_types_proto_block_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoTransaction) ProtoMessage() {}

func (x *ProtoTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_core_types_proto_block_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoTransaction.ProtoReflect.Descriptor instead.
func (*ProtoTransaction) Descriptor() ([]byte, []int) {
	return file_core_types_proto_block_proto_rawDescGZIP(), []int{1}
}

func (x *ProtoTransaction) GetType() uint64 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *ProtoTransaction) GetTo() []byte {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *ProtoTransaction) GetNonce() uint64 {
	if x != nil && x.Nonce != nil {
		return *x.Nonce
	}
	return 0
}

func (x *ProtoTransaction) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *ProtoTransaction) GetGas() uint64 {
	if x != nil && x.Gas != nil {
		return *x.Gas
	}
	return 0
}

func (x *ProtoTransaction) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ProtoTransaction) GetChainId() []byte {
	if x != nil {
		return x.ChainId
	}
	return nil
}

func (x *ProtoTransaction) GetGasFeeCap() []byte {
	if x != nil {
		return x.GasFeeCap
	}
	return nil
}

func (x *ProtoTransaction) GetGasTipCap() []byte {
	if x != nil {
		return x.GasTipCap
	}
	return nil
}

func (x *ProtoTransaction) GetAccessList() *ProtoAccessList {
	if x != nil {
		return x.AccessList
	}
	return nil
}

func (x *ProtoTransaction) GetV() []byte {
	if x != nil {
		return x.V
	}
	return nil
}

func (x *ProtoTransaction) GetR() []byte {
	if x != nil {
		return x.R
	}
	return nil
}

func (x *ProtoTransaction) GetS() []byte {
	if x != nil {
		return x.S
	}
	return nil
}

func (x *ProtoTransaction) GetOriginatingTxHash() *common.ProtoHash {
	if x != nil {
		return x.OriginatingTxHash
	}
	return nil
}

func (x *ProtoTransaction) GetEtxIndex() uint32 {
	if x != nil && x.EtxIndex != nil {
		return *x.EtxIndex
	}
	return 0
}

func (x *ProtoTransaction) GetTxIns() *ProtoTxIns {
	if x != nil {
		return x.TxIns
	}
	return nil
}

func (x *ProtoTransaction) GetTxOuts() *ProtoTxOuts {
	if x != nil {
		return x.TxOuts
	}
	return nil
}

func (x *ProtoTransaction) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *ProtoTransaction) GetEtxSender() []byte {
	if x != nil {
		return x.EtxSender
	}
	return nil
}

func (x *ProtoTransaction) GetParentHash() *common.ProtoHash {
	if x != nil {
		return x.ParentHash
	}
	return nil
}

func (x *ProtoTransaction) GetMixHash() *common.ProtoHash {
	if x != nil {
		return x.MixHash
	}
	return nil
}

func (x *ProtoTransaction) GetWorkNonce() uint64 {
	if x != nil && x.WorkNonce != nil {
		return *x.WorkNonce
	}
	return 0
}

func (x *ProtoTransaction) GetIsCoinbase() bool {
	if x != nil && x.IsCoinbase != nil {
		return *x.IsCoinbase
	}
	return false
}

type ProtoTransactions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transactions []*ProtoTransaction `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
}

func (x *ProtoTransactions) Reset() {
	*x = ProtoTransactions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_types_proto_block_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoTransactions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoTransactions) ProtoMessage() {}

func (x *ProtoTransactions) ProtoReflect() protoreflect.Message {
	mi := &file_core_types_proto_block_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoTransactions.ProtoReflect.Descriptor instead.
func (*ProtoTransactions) Descriptor() ([]byte, []int) {
	return file_core_types_proto_block_proto_rawDescGZIP(), []int{2}
}

func (x *ProtoTransactions) GetTransactions() []*ProtoTransaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

type ProtoHeaders struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Headers []*ProtoHeader `protobuf:"bytes,1,rep,name=headers,proto3" json:"headers,omitempty"`
}

func (x *ProtoHeaders) Reset() {
	*x = ProtoHeaders{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_types_proto_block_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoHeaders) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoHeaders) ProtoMessage() {}

func (x *ProtoHeaders) ProtoReflect() protoreflect.Message {
	mi := &file_core_types_proto_block_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoHeaders.ProtoReflect.Descriptor instead.
func (*ProtoHeaders) Descriptor() ([]byte, []int) {
	return file_core_types_proto_block_proto_rawDescGZIP(), []int{3}
}

func (x *ProtoHeaders) GetHeaders() []*ProtoHeader {
	if x != nil {
		return x.Headers
	}
	return nil
}

type ProtoManifest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Manifest []*common.ProtoHash `protobuf:"bytes,1,rep,name=manifest,proto3" json:"manifest,omitempty"`
}

func (x *ProtoManifest) Reset() {
	*x = ProtoManifest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_types_proto_block_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoManifest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoManifest) ProtoMessage() {}

func (x *ProtoManifest) ProtoReflect() protoreflect.Message {
	mi := &file_core_types_proto_block_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoManifest.ProtoReflect.Descriptor instead.
func (*ProtoManifest) Descriptor() ([]byte, []int) {
	return file_core_types_proto_block_proto_rawDescGZIP(), []int{4}
}

func (x *ProtoManifest) GetManifest() []*common.ProtoHash {
	if x != nil {
		return x.Manifest
	}
	return nil
}

type ProtoAccessList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessTuples []*ProtoAccessTuple `protobuf:"bytes,1,rep,name=access_tuples,json=accessTuples,proto3" json:"access_tuples,omitempty"`
}

func (x *ProtoAccessList) Reset() {
	*x = ProtoAccessList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_types_proto_block_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoAccessList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoAccessList) ProtoMessage() {}

func (x *ProtoAccessList) ProtoReflect() protoreflect.Message {
	mi := &file_core_types_proto_block_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoAccessList.ProtoReflect.Descriptor instead.
func (*ProtoAccessList) Descriptor() ([]byte, []int) {
	return file_core_types_proto_block_proto_rawDescGZIP(), []int{5}
}

func (x *ProtoAccessList) GetAccessTuples() []*ProtoAccessTuple {
	if x != nil {
		return x.AccessTuples
	}
	return nil
}

type ProtoWorkObjectHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HeaderHash          *common.ProtoHash     `protobuf:"bytes,1,opt,name=header_hash,json=headerHash,proto3,oneof" json:"header_hash,omitempty"`
	ParentHash          *common.ProtoHash     `protobuf:"bytes,2,opt,name=parent_hash,json=parentHash,proto3,oneof" json:"parent_hash,omitempty"`
	Number              []byte                `protobuf:"bytes,3,opt,name=number,proto3,oneof" json:"number,omitempty"`
	Difficulty          []byte                `protobuf:"bytes,4,opt,name=difficulty,proto3,oneof" json:"difficulty,omitempty"`
	TxHash              *common.ProtoHash     `protobuf:"bytes,5,opt,name=tx_hash,json=txHash,proto3,oneof" json:"tx_hash,omitempty"`
	Nonce               *uint64               `protobuf:"varint,6,opt,name=nonce,proto3,oneof" json:"nonce,omitempty"`
	Location            *common.ProtoLocation `protobuf:"bytes,7,opt,name=location,proto3,oneof" json:"location,omitempty"`
	MixHash             *common.ProtoHash     `protobuf:"bytes,8,opt,name=mix_hash,json=mixHash,proto3,oneof" json:"mix_hash,omitempty"`
	Time                *uint64               `protobuf:"varint,9,opt,name=time,proto3,oneof" json:"time,omitempty"`
	PrimeTerminusNumber []byte                `protobuf:"bytes,10,opt,name=prime_terminus_number,json=primeTerminusNumber,proto3,oneof" json:"prime_terminus_number,omitempty"`
	Coinbase            *common.ProtoAddress  `protobuf:"bytes,11,opt,name=coinbase,proto3,oneof" json:"coinbase,omitempty"`
}

func (x *ProtoWorkObjectHeader) Reset() {
	*x = ProtoWorkObjectHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_types_proto_block_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoWorkObjectHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoWorkObjectHeader) ProtoMessage() {}

func (x *ProtoWorkObjectHeader) ProtoReflect() protoreflect.Message {
	mi := &file_core_types_proto_block_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoWorkObjectHeader.ProtoReflect.Descriptor instead.
func (*ProtoWorkObjectHeader) Descriptor() ([]byte, []int) {
	return file_core_types_proto_block_proto_rawDescGZIP(), []int{6}
}

func (x *ProtoWorkObjectHeader) GetHeaderHash() *common.ProtoHash {
	if x != nil {
		return x.HeaderHash
	}
	return nil
}

func (x *ProtoWorkObjectHeader) GetParentHash() *common.ProtoHash {
	if x != nil {
		return x.ParentHash
	}
	return nil
}

func (x *ProtoWorkObjectHeader) GetNumber() []byte {
	if x != nil {
		return x.Number
	}
	return nil
}

func (x *ProtoWorkObjectHeader) GetDifficulty() []byte {
	if x != nil {
		return x.Difficulty
	}
	return nil
}

func (x *ProtoWorkObjectHeader) GetTxHash() *common.ProtoHash {
	if x != nil {
		return x.TxHash
	}
	return nil
}

func (x *ProtoWorkObjectHeader) GetNonce() uint64 {
	if x != nil && x.Nonce != nil {
		return *x.Nonce
	}
	return 0
}

func (x *ProtoWorkObjectHeader) GetLocation() *common.ProtoLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *ProtoWorkObjectHeader) GetMixHash() *common.ProtoHash {
	if x != nil {
		return x.MixHash
	}
	return nil
}

func (x *ProtoWorkObjectHeader) GetTime() uint64 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return 0
}

func (x *ProtoWorkObjectHeader) GetPrimeTerminusNumber() []byte {
	if x != nil {
		return x.PrimeTerminusNumber
	}
	return nil
}

func (x *ProtoWorkObjectHeader) GetCoinbase() *common.ProtoAddress {
	if x != nil {
		return x.Coinbase
	}
	return nil
}

type ProtoWorkObjectHeaders struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WoHeaders []*ProtoWorkObjectHeader `protobuf:"bytes,1,rep,name=wo_headers,json=woHeaders,proto3" json:"wo_headers,omitempty"`
}

func (x *ProtoWorkObjectHeaders) Reset() {
	*x = ProtoWorkObjectHeaders{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_types_proto_block_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoWorkObjectHeaders) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoWorkObjectHeaders) ProtoMessage() {}

func (x *ProtoWorkObjectHeaders) ProtoReflect() protoreflect.Message {
	mi := &file_core_types_proto_block_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoWorkObjectHeaders.ProtoReflect.Descriptor instead.
func (*ProtoWorkObjectHeaders) Descriptor() ([]byte, []int) {
	return file_core_types_proto_block_proto_rawDescGZIP(), []int{7}
}

func (x *ProtoWorkObjectHeaders) GetWoHeaders() []*ProtoWorkObjectHeader {
	if x != nil {
		return x.WoHeaders
	}
	return nil
}

type ProtoWorkObjectBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header          *ProtoHeader            `protobuf:"bytes,1,opt,name=header,proto3,oneof" json:"header,omitempty"`
	Transactions    *ProtoTransactions      `protobuf:"bytes,2,opt,name=transactions,proto3,oneof" json:"transactions,omitempty"`
	Uncles          *ProtoWorkObjectHeaders `protobuf:"bytes,3,opt,name=uncles,proto3,oneof" json:"uncles,omitempty"`
	ExtTransactions *ProtoTransactions      `protobuf:"bytes,4,opt,name=ext_transactions,json=extTransactions,proto3,oneof" json:"ext_transactions,omitempty"`
	Manifest        *ProtoManifest          `protobuf:"bytes,5,opt,name=manifest,proto3,oneof" json:"manifest,omitempty"`
	InterlinkHashes *common.ProtoHashes     `protobuf:"bytes,6,opt,name=interlink_hashes,json=interlinkHashes,proto3,oneof" json:"interlink_hashes,omitempty"`
}

func (x *ProtoWorkObjectBody) Reset() {
	*x = ProtoWorkObjectBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_types_proto_block_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoWorkObjectBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoWorkObjectBody) ProtoMessage() {}

func (x *ProtoWorkObjectBody) ProtoReflect() protoreflect.Message {
	mi := &file_core_types_proto_block_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoWorkObjectBody.ProtoReflect.Descriptor instead.
func (*ProtoWorkObjectBody) Descriptor() ([]byte, []int) {
	return file_core_types_proto_block_proto_rawDescGZIP(), []int{8}
}

func (x *ProtoWorkObjectBody) GetHeader() *ProtoHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *ProtoWorkObjectBody) GetTransactions() *ProtoTransactions {
	if x != nil {
		return x.Transactions
	}
	return nil
}

func (x *ProtoWorkObjectBody) GetUncles() *ProtoWorkObjectHeaders {
	if x != nil {
		return x.Uncles
	}
	return nil
}

func (x *ProtoWorkObjectBody) GetExtTransactions() *ProtoTransactions {
	if x != nil {
		return x.ExtTransactions
	}
	return nil
}

func (x *ProtoWorkObjectBody) GetManifest() *ProtoManifest {
	if x != nil {
		return x.Manifest
	}
	return nil
}

func (x *ProtoWorkObjectBody) GetInterlinkHashes() *common.ProtoHashes {
	if x != nil {
		return x.InterlinkHashes
	}
	return nil
}

type ProtoWorkObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WoHeader *ProtoWorkObjectHeader `protobuf:"bytes,1,opt,name=wo_header,json=woHeader,proto3,oneof" json:"wo_header,omitempty"`
	WoBody   *ProtoWorkObjectBody   `protobuf:"bytes,2,opt,name=wo_body,json=woBody,proto3,oneof" json:"wo_body,omitempty"`
	Tx       *ProtoTransaction      `protobuf:"bytes,3,opt,name=tx,proto3,oneof" json:"tx,omitempty"`
}

func (x *ProtoWorkObject) Reset() {
	*x = ProtoWorkObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_types_proto_block_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoWorkObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoWorkObject) ProtoMessage() {}

func (x *ProtoWorkObject) ProtoReflect() protoreflect.Message {
	mi := &file_core_types_proto_block_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoWorkObject.ProtoReflect.Descriptor instead.
func (*ProtoWorkObject) Descriptor() ([]byte, []int) {
	return file_core_types_proto_block_proto_rawDescGZIP(), []int{9}
}

func (x *ProtoWorkObject) GetWoHeader() *ProtoWorkObjectHeader {
	if x != nil {
		return x.WoHeader
	}
	return nil
}

func (x *ProtoWorkObject) GetWoBody() *ProtoWorkObjectBody {
	if x != nil {
		return x.WoBody
	}
	return nil
}

func (x *ProtoWorkObject) GetTx() *ProtoTransaction {
	if x != nil {
		return x.Tx
	}
	return nil
}

type ProtoWorkObjects struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkObjects []*ProtoWorkObject `protobuf:"bytes,1,rep,name=work_objects,json=workObjects,proto3" json:"work_objects,omitempty"`
}

func (x *ProtoWorkObjects) Reset() {
	*x = ProtoWorkObjects{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_types_proto_block_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoWorkObjects) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoWorkObjects) ProtoMessage() {}

func (x *ProtoWorkObjects) ProtoReflect() protoreflect.Message {
	mi := &file_core_types_proto_block_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoWorkObjects.ProtoReflect.Descriptor instead.
func (*ProtoWorkObjects) Descriptor() ([]byte, []int) {
	return file_core_types_proto_block_proto_rawDescGZIP(), []int{10}
}

func (x *ProtoWorkObjects) GetWorkObjects() []*ProtoWorkObject {
	if x != nil {
		return x.WorkObjects
	}
	return nil
}

type ProtoWorkObjectBlockView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkObject *ProtoWorkObject `protobuf:"bytes,1,opt,name=work_object,json=workObject,proto3,oneof" json:"work_object,omitempty"`
}

func (x *ProtoWorkObjectBlockView) Reset() {
	*x = ProtoWorkObjectBlockView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_types_proto_block_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoWorkObjectBlockView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoWorkObjectBlockView) ProtoMessage() {}

func (x *ProtoWorkObjectBlockView) ProtoReflect() protoreflect.Message {
	mi := &file_core_types_proto_block_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoWorkObjectBlockView.ProtoReflect.Descriptor instead.
func (*ProtoWorkObjectBlockView) Descriptor() ([]byte, []int) {
	return file_core_types_proto_block_proto_rawDescGZIP(), []int{11}
}

func (x *ProtoWorkObjectBlockView) GetWorkObject() *ProtoWorkObject {
	if x != nil {
		return x.WorkObject
	}
	return nil
}

type ProtoWorkObjectBlocksView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkObjects []*ProtoWorkObjectBlockView `protobuf:"bytes,1,rep,name=work_objects,json=workObjects,proto3" json:"work_objects,omitempty"`
}

func (x *ProtoWorkObjectBlocksView) Reset() {
	*x = ProtoWorkObjectBlocksView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_types_proto_block_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoWorkObjectBlocksView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoWorkObjectBlocksView) ProtoMessage() {}

func (x *ProtoWorkObjectBlocksView) ProtoReflect() protoreflect.Message {
	mi := &file_core_types_proto_block_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoWorkObjectBlocksView.ProtoReflect.Descriptor instead.
func (*ProtoWorkObjectBlocksView) Descriptor() ([]byte, []int) {
	return file_core_types_proto_block_proto_rawDescGZIP(), []int{12}
}

func (x *ProtoWorkObjectBlocksView) GetWorkObjects() []*ProtoWorkObjectBlockView {
	if x != nil {
		return x.WorkObjects
	}
	return nil
}

type ProtoWorkObjectHeaderView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkObject *ProtoWorkObject `protobuf:"bytes,1,opt,name=work_object,json=workObject,proto3,oneof" json:"work_object,omitempty"`
}

func (x *ProtoWorkObjectHeaderView) Reset() {
	*x = ProtoWorkObjectHeaderView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_types_proto_block_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoWorkObjectHeaderView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoWorkObjectHeaderView) ProtoMessage() {}

func (x *ProtoWorkObjectHeaderView) ProtoReflect() protoreflect.Message {
	mi := &file_core_types_proto_block_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoWorkObjectHeaderView.ProtoReflect.Descriptor instead.
func (*ProtoWorkObjectHeaderView) Descriptor() ([]byte, []int) {
	return file_core_types_proto_block_proto_rawDescGZIP(), []int{13}
}

func (x *ProtoWorkObjectHeaderView) GetWorkObject() *ProtoWorkObject {
	if x != nil {
		return x.WorkObject
	}
	return nil
}

type ProtoWorkObjectShareView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkObject *ProtoWorkObject `protobuf:"bytes,1,opt,name=work_object,json=workObject,proto3,oneof" json:"work_object,omitempty"`
}

func (x *ProtoWorkObjectShareView) Reset() {
	*x = ProtoWorkObjectShareView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_types_proto_block_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoWorkObjectShareView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoWorkObjectShareView) ProtoMessage() {}

func (x *ProtoWorkObjectShareView) ProtoReflect() protoreflect.Message {
	mi := &file_core_types_proto_block_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoWorkObjectShareView.ProtoReflect.Descriptor instead.
func (*ProtoWorkObjectShareView) Descriptor() ([]byte, []int) {
	return file_core_types_proto_block_proto_rawDescGZIP(), []int{14}
}

func (x *ProtoWorkObjectShareView) GetWorkObject() *ProtoWorkObject {
	if x != nil {
		return x.WorkObject
	}
	return nil
}

type ProtoAccessTuple struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address    []byte              `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	StorageKey []*common.ProtoHash `protobuf:"bytes,2,rep,name=storage_key,json=storageKey,proto3" json:"storage_key,omitempty"`
}

func (x *ProtoAccessTuple) Reset() {
	*x = ProtoAccessTuple{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_types_proto_block_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoAccessTuple) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoAccessTuple) ProtoMessage() {}

func (x *ProtoAccessTuple) ProtoReflect() protoreflect.Message {
	mi := &file_core_types_proto_block_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoAccessTuple.ProtoReflect.Descriptor instead.
func (*ProtoAccessTuple) Descriptor() ([]byte, []int) {
	return file_core_types_proto_block_proto_rawDescGZIP(), []int{15}
}

func (x *ProtoAccessTuple) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *ProtoAccessTuple) GetStorageKey() []*common.ProtoHash {
	if x != nil {
		return x.StorageKey
	}
	return nil
}

type ProtoReceiptForStorage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostStateOrStatus []byte               `protobuf:"bytes,1,opt,name=post_state_or_status,json=postStateOrStatus,proto3" json:"post_state_or_status,omitempty"`
	CumulativeGasUsed uint64               `protobuf:"varint,2,opt,name=cumulative_gas_used,json=cumulativeGasUsed,proto3" json:"cumulative_gas_used,omitempty"`
	TxHash            *common.ProtoHash    `protobuf:"bytes,3,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	ContractAddress   *common.ProtoAddress `protobuf:"bytes,4,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	Logs              *ProtoLogsForStorage `protobuf:"bytes,5,opt,name=logs,proto3" json:"logs,omitempty"`
	Etxs              *ProtoTransactions   `protobuf:"bytes,6,opt,name=etxs,proto3" json:"etxs,omitempty"`
	GasUsed           uint64               `protobuf:"varint,7,opt,name=gas_used,json=gasUsed,proto3" json:"gas_used,omitempty"`
}

func (x *ProtoReceiptForStorage) Reset() {
	*x = ProtoReceiptForStorage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_types_proto_block_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoReceiptForStorage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoReceiptForStorage) ProtoMessage() {}

func (x *ProtoReceiptForStorage) ProtoReflect() protoreflect.Message {
	mi := &file_core_types_proto_block_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoReceiptForStorage.ProtoReflect.Descriptor instead.
func (*ProtoReceiptForStorage) Descriptor() ([]byte, []int) {
	return file_core_types_proto_block_proto_rawDescGZIP(), []int{16}
}

func (x *ProtoReceiptForStorage) GetPostStateOrStatus() []byte {
	if x != nil {
		return x.PostStateOrStatus
	}
	return nil
}

func (x *ProtoReceiptForStorage) GetCumulativeGasUsed() uint64 {
	if x != nil {
		return x.CumulativeGasUsed
	}
	return 0
}

func (x *ProtoReceiptForStorage) GetTxHash() *common.ProtoHash {
	if x != nil {
		return x.TxHash
	}
	return nil
}

func (x *ProtoReceiptForStorage) GetContractAddress() *common.ProtoAddress {
	if x != nil {
		return x.ContractAddress
	}
	return nil
}

func (x *ProtoReceiptForStorage) GetLogs() *ProtoLogsForStorage {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *ProtoReceiptForStorage) GetEtxs() *ProtoTransactions {
	if x != nil {
		return x.Etxs
	}
	return nil
}

func (x *ProtoReceiptForStorage) GetGasUsed() uint64 {
	if x != nil {
		return x.GasUsed
	}
	return 0
}

type ProtoReceiptsForStorage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Receipts []*ProtoReceiptForStorage `protobuf:"bytes,1,rep,name=receipts,proto3" json:"receipts,omitempty"`
}

func (x *ProtoReceiptsForStorage) Reset() {
	*x = ProtoReceiptsForStorage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_types_proto_block_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoReceiptsForStorage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoReceiptsForStorage) ProtoMessage() {}

func (x *ProtoReceiptsForStorage) ProtoReflect() protoreflect.Message {
	mi := &file_core_types_proto_block_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoReceiptsForStorage.ProtoReflect.Descriptor instead.
func (*ProtoReceiptsForStorage) Descriptor() ([]byte, []int) {
	return file_core_types_proto_block_proto_rawDescGZIP(), []int{17}
}

func (x *ProtoReceiptsForStorage) GetReceipts() []*ProtoReceiptForStorage {
	if x != nil {
		return x.Receipts
	}
	return nil
}

type ProtoLogForStorage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address *common.ProtoAddress `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Topics  []*common.ProtoHash  `protobuf:"bytes,2,rep,name=topics,proto3" json:"topics,omitempty"`
	Data    []byte               `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ProtoLogForStorage) Reset() {
	*x = ProtoLogForStorage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_types_proto_block_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoLogForStorage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoLogForStorage) ProtoMessage() {}

func (x *ProtoLogForStorage) ProtoReflect() protoreflect.Message {
	mi := &file_core_types_proto_block_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoLogForStorage.ProtoReflect.Descriptor instead.
func (*ProtoLogForStorage) Descriptor() ([]byte, []int) {
	return file_core_types_proto_block_proto_rawDescGZIP(), []int{18}
}

func (x *ProtoLogForStorage) GetAddress() *common.ProtoAddress {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *ProtoLogForStorage) GetTopics() []*common.ProtoHash {
	if x != nil {
		return x.Topics
	}
	return nil
}

func (x *ProtoLogForStorage) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ProtoLogsForStorage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Logs []*ProtoLogForStorage `protobuf:"bytes,1,rep,name=logs,proto3" json:"logs,omitempty"`
}

func (x *ProtoLogsForStorage) Reset() {
	*x = ProtoLogsForStorage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_types_proto_block_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoLogsForStorage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoLogsForStorage) ProtoMessage() {}

func (x *ProtoLogsForStorage) ProtoReflect() protoreflect.Message {
	mi := &file_core_types_proto_block_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoLogsForStorage.ProtoReflect.Descriptor instead.
func (*ProtoLogsForStorage) Descriptor() ([]byte, []int) {
	return file_core_types_proto_block_proto_rawDescGZIP(), []int{19}
}

func (x *ProtoLogsForStorage) GetLogs() []*ProtoLogForStorage {
	if x != nil {
		return x.Logs
	}
	return nil
}

type ProtoPendingHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Wo      *ProtoWorkObject `protobuf:"bytes,1,opt,name=wo,proto3,oneof" json:"wo,omitempty"`
	Termini *ProtoTermini    `protobuf:"bytes,2,opt,name=termini,proto3,oneof" json:"termini,omitempty"`
}

func (x *ProtoPendingHeader) Reset() {
	*x = ProtoPendingHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_types_proto_block_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoPendingHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoPendingHeader) ProtoMessage() {}

func (x *ProtoPendingHeader) ProtoReflect() protoreflect.Message {
	mi := &file_core_types_proto_block_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoPendingHeader.ProtoReflect.Descriptor instead.
func (*ProtoPendingHeader) Descriptor() ([]byte, []int) {
	return file_core_types_proto_block_proto_rawDescGZIP(), []int{20}
}

func (x *ProtoPendingHeader) GetWo() *ProtoWorkObject {
	if x != nil {
		return x.Wo
	}
	return nil
}

func (x *ProtoPendingHeader) GetTermini() *ProtoTermini {
	if x != nil {
		return x.Termini
	}
	return nil
}

type ProtoTermini struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DomTermini []*common.ProtoHash `protobuf:"bytes,1,rep,name=dom_termini,json=domTermini,proto3" json:"dom_termini,omitempty"`
	SubTermini []*common.ProtoHash `protobuf:"bytes,2,rep,name=sub_termini,json=subTermini,proto3" json:"sub_termini,omitempty"`
}

func (x *ProtoTermini) Reset() {
	*x = ProtoTermini{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_types_proto_block_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoTermini) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoTermini) ProtoMessage() {}

func (x *ProtoTermini) ProtoReflect() protoreflect.Message {
	mi := &file_core_types_proto_block_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoTermini.ProtoReflect.Descriptor instead.
func (*ProtoTermini) Descriptor() ([]byte, []int) {
	return file_core_types_proto_block_proto_rawDescGZIP(), []int{21}
}

func (x *ProtoTermini) GetDomTermini() []*common.ProtoHash {
	if x != nil {
		return x.DomTermini
	}
	return nil
}

func (x *ProtoTermini) GetSubTermini() []*common.ProtoHash {
	if x != nil {
		return x.SubTermini
	}
	return nil
}

type ProtoEtxSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EtxHashes []byte `protobuf:"bytes,1,opt,name=etx_hashes,json=etxHashes,proto3,oneof" json:"etx_hashes,omitempty"`
}

func (x *ProtoEtxSet) Reset() {
	*x = ProtoEtxSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_types_proto_block_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoEtxSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoEtxSet) ProtoMessage() {}

func (x *ProtoEtxSet) ProtoReflect() protoreflect.Message {
	mi := &file_core_types_proto_block_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoEtxSet.ProtoReflect.Descriptor instead.
func (*ProtoEtxSet) Descriptor() ([]byte, []int) {
	return file_core_types_proto_block_proto_rawDescGZIP(), []int{22}
}

func (x *ProtoEtxSet) GetEtxHashes() []byte {
	if x != nil {
		return x.EtxHashes
	}
	return nil
}

type ProtoPendingEtxs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *ProtoWorkObject   `protobuf:"bytes,1,opt,name=header,proto3,oneof" json:"header,omitempty"`
	Etxs   *ProtoTransactions `protobuf:"bytes,2,opt,name=etxs,proto3,oneof" json:"etxs,omitempty"`
}

func (x *ProtoPendingEtxs) Reset() {
	*x = ProtoPendingEtxs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_types_proto_block_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoPendingEtxs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoPendingEtxs) ProtoMessage() {}

func (x *ProtoPendingEtxs) ProtoReflect() protoreflect.Message {
	mi := &file_core_types_proto_block_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoPendingEtxs.ProtoReflect.Descriptor instead.
func (*ProtoPendingEtxs) Descriptor() ([]byte, []int) {
	return file_core_types_proto_block_proto_rawDescGZIP(), []int{23}
}

func (x *ProtoPendingEtxs) GetHeader() *ProtoWorkObject {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *ProtoPendingEtxs) GetEtxs() *ProtoTransactions {
	if x != nil {
		return x.Etxs
	}
	return nil
}

type ProtoPendingEtxsRollup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header     *ProtoWorkObject   `protobuf:"bytes,1,opt,name=header,proto3,oneof" json:"header,omitempty"`
	EtxsRollup *ProtoTransactions `protobuf:"bytes,2,opt,name=etxs_rollup,json=etxsRollup,proto3,oneof" json:"etxs_rollup,omitempty"`
}

func (x *ProtoPendingEtxsRollup) Reset() {
	*x = ProtoPendingEtxsRollup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_types_proto_block_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoPendingEtxsRollup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoPendingEtxsRollup) ProtoMessage() {}

func (x *ProtoPendingEtxsRollup) ProtoReflect() protoreflect.Message {
	mi := &file_core_types_proto_block_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoPendingEtxsRollup.ProtoReflect.Descriptor instead.
func (*ProtoPendingEtxsRollup) Descriptor() ([]byte, []int) {
	return file_core_types_proto_block_proto_rawDescGZIP(), []int{24}
}

func (x *ProtoPendingEtxsRollup) GetHeader() *ProtoWorkObject {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *ProtoPendingEtxsRollup) GetEtxsRollup() *ProtoTransactions {
	if x != nil {
		return x.EtxsRollup
	}
	return nil
}

type ProtoTxIns struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxIns []*ProtoTxIn `protobuf:"bytes,1,rep,name=tx_ins,json=txIns,proto3" json:"tx_ins,omitempty"`
}

func (x *ProtoTxIns) Reset() {
	*x = ProtoTxIns{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_types_proto_block_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoTxIns) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoTxIns) ProtoMessage() {}

func (x *ProtoTxIns) ProtoReflect() protoreflect.Message {
	mi := &file_core_types_proto_block_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoTxIns.ProtoReflect.Descriptor instead.
func (*ProtoTxIns) Descriptor() ([]byte, []int) {
	return file_core_types_proto_block_proto_rawDescGZIP(), []int{25}
}

func (x *ProtoTxIns) GetTxIns() []*ProtoTxIn {
	if x != nil {
		return x.TxIns
	}
	return nil
}

type ProtoTxOuts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxOuts []*ProtoTxOut `protobuf:"bytes,1,rep,name=tx_outs,json=txOuts,proto3" json:"tx_outs,omitempty"`
}

func (x *ProtoTxOuts) Reset() {
	*x = ProtoTxOuts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_types_proto_block_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoTxOuts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoTxOuts) ProtoMessage() {}

func (x *ProtoTxOuts) ProtoReflect() protoreflect.Message {
	mi := &file_core_types_proto_block_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoTxOuts.ProtoReflect.Descriptor instead.
func (*ProtoTxOuts) Descriptor() ([]byte, []int) {
	return file_core_types_proto_block_proto_rawDescGZIP(), []int{26}
}

func (x *ProtoTxOuts) GetTxOuts() []*ProtoTxOut {
	if x != nil {
		return x.TxOuts
	}
	return nil
}

type ProtoTxIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PreviousOutPoint *ProtoOutPoint `protobuf:"bytes,1,opt,name=previous_out_point,json=previousOutPoint,proto3,oneof" json:"previous_out_point,omitempty"`
	PubKey           []byte         `protobuf:"bytes,2,opt,name=pub_key,json=pubKey,proto3,oneof" json:"pub_key,omitempty"`
}

func (x *ProtoTxIn) Reset() {
	*x = ProtoTxIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_types_proto_block_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoTxIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoTxIn) ProtoMessage() {}

func (x *ProtoTxIn) ProtoReflect() protoreflect.Message {
	mi := &file_core_types_proto_block_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoTxIn.ProtoReflect.Descriptor instead.
func (*ProtoTxIn) Descriptor() ([]byte, []int) {
	return file_core_types_proto_block_proto_rawDescGZIP(), []int{27}
}

func (x *ProtoTxIn) GetPreviousOutPoint() *ProtoOutPoint {
	if x != nil {
		return x.PreviousOutPoint
	}
	return nil
}

func (x *ProtoTxIn) GetPubKey() []byte {
	if x != nil {
		return x.PubKey
	}
	return nil
}

type ProtoOutPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash  *common.ProtoHash `protobuf:"bytes,1,opt,name=hash,proto3,oneof" json:"hash,omitempty"`
	Index *uint32           `protobuf:"varint,2,opt,name=index,proto3,oneof" json:"index,omitempty"`
}

func (x *ProtoOutPoint) Reset() {
	*x = ProtoOutPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_types_proto_block_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoOutPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoOutPoint) ProtoMessage() {}

func (x *ProtoOutPoint) ProtoReflect() protoreflect.Message {
	mi := &file_core_types_proto_block_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoOutPoint.ProtoReflect.Descriptor instead.
func (*ProtoOutPoint) Descriptor() ([]byte, []int) {
	return file_core_types_proto_block_proto_rawDescGZIP(), []int{28}
}

func (x *ProtoOutPoint) GetHash() *common.ProtoHash {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *ProtoOutPoint) GetIndex() uint32 {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return 0
}

type ProtoTxOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Denomination *uint32 `protobuf:"varint,1,opt,name=denomination,proto3,oneof" json:"denomination,omitempty"`
	Address      []byte  `protobuf:"bytes,2,opt,name=address,proto3,oneof" json:"address,omitempty"`
	Lock         []byte  `protobuf:"bytes,3,opt,name=lock,proto3,oneof" json:"lock,omitempty"`
}

func (x *ProtoTxOut) Reset() {
	*x = ProtoTxOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_types_proto_block_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoTxOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoTxOut) ProtoMessage() {}

func (x *ProtoTxOut) ProtoReflect() protoreflect.Message {
	mi := &file_core_types_proto_block_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoTxOut.ProtoReflect.Descriptor instead.
func (*ProtoTxOut) Descriptor() ([]byte, []int) {
	return file_core_types_proto_block_proto_rawDescGZIP(), []int{29}
}

func (x *ProtoTxOut) GetDenomination() uint32 {
	if x != nil && x.Denomination != nil {
		return *x.Denomination
	}
	return 0
}

func (x *ProtoTxOut) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *ProtoTxOut) GetLock() []byte {
	if x != nil {
		return x.Lock
	}
	return nil
}

type ProtoOutPointAndDenomination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash         *common.ProtoHash `protobuf:"bytes,1,opt,name=hash,proto3,oneof" json:"hash,omitempty"`
	Index        *uint32           `protobuf:"varint,2,opt,name=index,proto3,oneof" json:"index,omitempty"`
	Denomination *uint32           `protobuf:"varint,3,opt,name=denomination,proto3,oneof" json:"denomination,omitempty"`
}

func (x *ProtoOutPointAndDenomination) Reset() {
	*x = ProtoOutPointAndDenomination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_types_proto_block_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoOutPointAndDenomination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoOutPointAndDenomination) ProtoMessage() {}

func (x *ProtoOutPointAndDenomination) ProtoReflect() protoreflect.Message {
	mi := &file_core_types_proto_block_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoOutPointAndDenomination.ProtoReflect.Descriptor instead.
func (*ProtoOutPointAndDenomination) Descriptor() ([]byte, []int) {
	return file_core_types_proto_block_proto_rawDescGZIP(), []int{30}
}

func (x *ProtoOutPointAndDenomination) GetHash() *common.ProtoHash {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *ProtoOutPointAndDenomination) GetIndex() uint32 {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return 0
}

func (x *ProtoOutPointAndDenomination) GetDenomination() uint32 {
	if x != nil && x.Denomination != nil {
		return *x.Denomination
	}
	return 0
}

type ProtoAddressOutPoints struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OutPoints map[string]*ProtoOutPointAndDenomination `protobuf:"bytes,1,rep,name=out_points,json=outPoints,proto3" json:"out_points,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ProtoAddressOutPoints) Reset() {
	*x = ProtoAddressOutPoints{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_types_proto_block_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoAddressOutPoints) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoAddressOutPoints) ProtoMessage() {}

func (x *ProtoAddressOutPoints) ProtoReflect() protoreflect.Message {
	mi := &file_core_types_proto_block_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoAddressOutPoints.ProtoReflect.Descriptor instead.
func (*ProtoAddressOutPoints) Descriptor() ([]byte, []int) {
	return file_core_types_proto_block_proto_rawDescGZIP(), []int{31}
}

func (x *ProtoAddressOutPoints) GetOutPoints() map[string]*ProtoOutPointAndDenomination {
	if x != nil {
		return x.OutPoints
	}
	return nil
}

type ProtoOutPointsMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries map[string]*ProtoAddressOutPoints `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ProtoOutPointsMap) Reset() {
	*x = ProtoOutPointsMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_types_proto_block_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoOutPointsMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoOutPointsMap) ProtoMessage() {}

func (x *ProtoOutPointsMap) ProtoReflect() protoreflect.Message {
	mi := &file_core_types_proto_block_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoOutPointsMap.ProtoReflect.Descriptor instead.
func (*ProtoOutPointsMap) Descriptor() ([]byte, []int) {
	return file_core_types_proto_block_proto_rawDescGZIP(), []int{32}
}

func (x *ProtoOutPointsMap) GetEntries() map[string]*ProtoAddressOutPoints {
	if x != nil {
		return x.Entries
	}
	return nil
}

var File_core_types_proto_block_proto protoreflect.FileDescriptor

var file_core_types_proto_block_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x1a, 0x19, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x8b, 0x0f, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x12, 0x32, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x48, 0x61, 0x73, 0x68, 0x12, 0x35, 0x0a, 0x0a, 0x75, 0x6e, 0x63, 0x6c, 0x65, 0x5f, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x48, 0x00, 0x52, 0x09, 0x75,
	0x6e, 0x63, 0x6c, 0x65, 0x48, 0x61, 0x73, 0x68, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x08, 0x65,
	0x76, 0x6d, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x61, 0x73, 0x68,
	0x48, 0x01, 0x52, 0x07, 0x65, 0x76, 0x6d, 0x52, 0x6f, 0x6f, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2f,
	0x0a, 0x07, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x61,
	0x73, 0x68, 0x48, 0x02, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x88, 0x01, 0x01, 0x12,
	0x31, 0x0a, 0x08, 0x65, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x48, 0x61, 0x73, 0x68, 0x48, 0x03, 0x52, 0x07, 0x65, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x88,
	0x01, 0x01, 0x12, 0x3e, 0x0a, 0x0f, 0x65, 0x74, 0x78, 0x5f, 0x72, 0x6f, 0x6c, 0x6c, 0x75, 0x70,
	0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x48, 0x04,
	0x52, 0x0d, 0x65, 0x74, 0x78, 0x52, 0x6f, 0x6c, 0x6c, 0x75, 0x70, 0x48, 0x61, 0x73, 0x68, 0x88,
	0x01, 0x01, 0x12, 0x36, 0x0a, 0x0d, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x5f, 0x68,
	0x61, 0x73, 0x68, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x52, 0x0c, 0x6d, 0x61,
	0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x39, 0x0a, 0x0c, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x70, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48,
	0x61, 0x73, 0x68, 0x48, 0x05, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x48, 0x61,
	0x73, 0x68, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75,
	0x6c, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x06, 0x52, 0x0a, 0x64, 0x69, 0x66,
	0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x6f, 0x70, 0x79, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x0c, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x6f, 0x70,
	0x79, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x6c, 0x74,
	0x61, 0x5f, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x53, 0x12, 0x38, 0x0a, 0x19, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x75, 0x6e, 0x63, 0x6c, 0x65, 0x64, 0x5f, 0x73, 0x75, 0x62, 0x5f, 0x64, 0x65, 0x6c,
	0x74, 0x61, 0x5f, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x15, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x55, 0x6e, 0x63, 0x6c, 0x65, 0x64, 0x53, 0x75, 0x62, 0x44, 0x65, 0x6c, 0x74, 0x61,
	0x53, 0x12, 0x1e, 0x0a, 0x08, 0x75, 0x6e, 0x63, 0x6c, 0x65, 0x64, 0x5f, 0x73, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0c, 0x48, 0x07, 0x52, 0x07, 0x75, 0x6e, 0x63, 0x6c, 0x65, 0x64, 0x53, 0x88, 0x01,
	0x01, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0e, 0x20, 0x03, 0x28,
	0x0c, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x09, 0x67, 0x61, 0x73,
	0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04, 0x48, 0x08, 0x52, 0x08,
	0x67, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x67,
	0x61, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x04, 0x48, 0x09, 0x52,
	0x07, 0x67, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x62,
	0x61, 0x73, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x0a, 0x52,
	0x07, 0x62, 0x61, 0x73, 0x65, 0x46, 0x65, 0x65, 0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x0b, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x0c, 0x48, 0x0c, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x88, 0x01, 0x01, 0x12, 0x31,
	0x0a, 0x08, 0x6d, 0x69, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48,
	0x61, 0x73, 0x68, 0x48, 0x0d, 0x52, 0x07, 0x6d, 0x69, 0x78, 0x48, 0x61, 0x73, 0x68, 0x88, 0x01,
	0x01, 0x12, 0x19, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x04,
	0x48, 0x0e, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x09,
	0x75, 0x74, 0x78, 0x6f, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x61,
	0x73, 0x68, 0x48, 0x0f, 0x52, 0x08, 0x75, 0x74, 0x78, 0x6f, 0x52, 0x6f, 0x6f, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x38, 0x0a, 0x0c, 0x65, 0x74, 0x78, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x72, 0x6f, 0x6f,
	0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x48, 0x10, 0x52, 0x0a, 0x65, 0x74,
	0x78, 0x53, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x10, 0x65,
	0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18,
	0x18, 0x20, 0x01, 0x28, 0x04, 0x48, 0x11, 0x52, 0x0f, 0x65, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65,
	0x6e, 0x63, 0x79, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x0f, 0x74,
	0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x19,
	0x20, 0x01, 0x28, 0x04, 0x48, 0x12, 0x52, 0x0e, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c,
	0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x10, 0x65, 0x78, 0x70,
	0x61, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x1a, 0x20,
	0x01, 0x28, 0x04, 0x48, 0x13, 0x52, 0x0f, 0x65, 0x78, 0x70, 0x61, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x46, 0x0a, 0x13, 0x65, 0x74, 0x78,
	0x5f, 0x65, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x73,
	0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x48, 0x14, 0x52, 0x11, 0x65, 0x74, 0x78,
	0x45, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x73, 0x88, 0x01,
	0x01, 0x12, 0x3d, 0x0a, 0x0e, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x69,
	0x6e, 0x75, 0x73, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x48, 0x15, 0x52, 0x0d,
	0x70, 0x72, 0x69, 0x6d, 0x65, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x75, 0x73, 0x88, 0x01, 0x01,
	0x12, 0x46, 0x0a, 0x13, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x72, 0x6f,
	0x6f, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x61, 0x73, 0x68,
	0x48, 0x16, 0x52, 0x11, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6c, 0x69, 0x6e, 0x6b, 0x52, 0x6f, 0x6f,
	0x74, 0x48, 0x61, 0x73, 0x68, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x04, 0x48, 0x17, 0x52,
	0x0a, 0x73, 0x74, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x88, 0x01, 0x01, 0x12, 0x22,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x1f, 0x20, 0x01,
	0x28, 0x04, 0x48, 0x18, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0f, 0x71, 0x75, 0x61, 0x69, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x19, 0x52, 0x0d, 0x71,
	0x75, 0x61, 0x69, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x88, 0x01, 0x01, 0x42,
	0x0d, 0x0a, 0x0b, 0x5f, 0x75, 0x6e, 0x63, 0x6c, 0x65, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x65, 0x76, 0x6d, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f,
	0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x65, 0x74, 0x78, 0x5f,
	0x68, 0x61, 0x73, 0x68, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x65, 0x74, 0x78, 0x5f, 0x72, 0x6f, 0x6c,
	0x6c, 0x75, 0x70, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x70, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x64, 0x69,
	0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x75, 0x6e, 0x63,
	0x6c, 0x65, 0x64, 0x5f, 0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x67, 0x61, 0x73, 0x5f, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x67, 0x61, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x64,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6d, 0x69, 0x78, 0x5f, 0x68, 0x61, 0x73,
	0x68, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x75, 0x74, 0x78, 0x6f, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x65, 0x74,
	0x78, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x65,
	0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x42,
	0x12, 0x0a, 0x10, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x65, 0x78, 0x70, 0x61, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x65, 0x74, 0x78,
	0x5f, 0x65, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x73,
	0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x69,
	0x6e, 0x75, 0x73, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6c, 0x69, 0x6e,
	0x6b, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x71,
	0x75, 0x61, 0x69, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x22, 0xe9,
	0x08, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x48, 0x00, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x13, 0x0a, 0x02,
	0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x01, 0x52, 0x02, 0x74, 0x6f, 0x88, 0x01,
	0x01, 0x12, 0x19, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x48, 0x02, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x03, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x67, 0x61, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x04, 0x48, 0x04, 0x52, 0x03, 0x67, 0x61, 0x73, 0x88, 0x01, 0x01, 0x12, 0x17,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x05, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x06, 0x52, 0x07, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0b, 0x67, 0x61, 0x73, 0x5f, 0x66,
	0x65, 0x65, 0x5f, 0x63, 0x61, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x07, 0x52, 0x09,
	0x67, 0x61, 0x73, 0x46, 0x65, 0x65, 0x43, 0x61, 0x70, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0b,
	0x67, 0x61, 0x73, 0x5f, 0x74, 0x69, 0x70, 0x5f, 0x63, 0x61, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0c, 0x48, 0x08, 0x52, 0x09, 0x67, 0x61, 0x73, 0x54, 0x69, 0x70, 0x43, 0x61, 0x70, 0x88, 0x01,
	0x01, 0x12, 0x3c, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x09,
	0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x11, 0x0a, 0x01, 0x76, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x0a, 0x52, 0x01, 0x76, 0x88,
	0x01, 0x01, 0x12, 0x11, 0x0a, 0x01, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x0b, 0x52,
	0x01, 0x72, 0x88, 0x01, 0x01, 0x12, 0x11, 0x0a, 0x01, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0c,
	0x48, 0x0c, 0x52, 0x01, 0x73, 0x88, 0x01, 0x01, 0x12, 0x46, 0x0a, 0x13, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x48, 0x0d, 0x52, 0x11, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x78, 0x48, 0x61, 0x73, 0x68, 0x88, 0x01, 0x01,
	0x12, 0x20, 0x0a, 0x09, 0x65, 0x74, 0x78, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x0d, 0x48, 0x0e, 0x52, 0x08, 0x65, 0x74, 0x78, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x88,
	0x01, 0x01, 0x12, 0x2d, 0x0a, 0x06, 0x74, 0x78, 0x5f, 0x69, 0x6e, 0x73, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x54, 0x78, 0x49, 0x6e, 0x73, 0x48, 0x0f, 0x52, 0x05, 0x74, 0x78, 0x49, 0x6e, 0x73, 0x88, 0x01,
	0x01, 0x12, 0x30, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x6f, 0x75, 0x74, 0x73, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x54, 0x78, 0x4f, 0x75, 0x74, 0x73, 0x48, 0x10, 0x52, 0x06, 0x74, 0x78, 0x4f, 0x75, 0x74, 0x73,
	0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x11, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x65, 0x74, 0x78, 0x5f, 0x73, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x12, 0x52, 0x09, 0x65, 0x74,
	0x78, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x37, 0x0a, 0x0b, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x61,
	0x73, 0x68, 0x48, 0x13, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68,
	0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x08, 0x6d, 0x69, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x48, 0x14, 0x52, 0x07, 0x6d, 0x69, 0x78, 0x48,
	0x61, 0x73, 0x68, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6e,
	0x6f, 0x6e, 0x63, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x04, 0x48, 0x15, 0x52, 0x09, 0x77, 0x6f,
	0x72, 0x6b, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x69, 0x73,
	0x5f, 0x63, 0x6f, 0x69, 0x6e, 0x62, 0x61, 0x73, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x08, 0x48,
	0x16, 0x52, 0x0a, 0x69, 0x73, 0x43, 0x6f, 0x69, 0x6e, 0x62, 0x61, 0x73, 0x65, 0x88, 0x01, 0x01,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x74, 0x6f,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x67, 0x61, 0x73, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f,
	0x69, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x67, 0x61, 0x73, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x63,
	0x61, 0x70, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x67, 0x61, 0x73, 0x5f, 0x74, 0x69, 0x70, 0x5f, 0x63,
	0x61, 0x70, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x42, 0x04, 0x0a, 0x02, 0x5f, 0x76, 0x42, 0x04, 0x0a, 0x02, 0x5f, 0x72, 0x42, 0x04,
	0x0a, 0x02, 0x5f, 0x73, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x65, 0x74, 0x78, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x74,
	0x78, 0x5f, 0x69, 0x6e, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x74, 0x78, 0x5f, 0x6f, 0x75, 0x74,
	0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x42,
	0x0d, 0x0a, 0x0b, 0x5f, 0x65, 0x74, 0x78, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x6d, 0x69, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x69,
	0x73, 0x5f, 0x63, 0x6f, 0x69, 0x6e, 0x62, 0x61, 0x73, 0x65, 0x22, 0x50, 0x0a, 0x11, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x3b, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x3c, 0x0a, 0x0c,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x2c, 0x0a, 0x07,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x22, 0x3e, 0x0a, 0x0d, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x08, 0x6d,
	0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x61, 0x73, 0x68,
	0x52, 0x08, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x22, 0x4f, 0x0a, 0x0f, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3c, 0x0a,
	0x0d, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x75, 0x70, 0x6c, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x75, 0x70, 0x6c, 0x65, 0x52, 0x0c, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x75, 0x70, 0x6c, 0x65, 0x73, 0x22, 0xa5, 0x05, 0x0a, 0x15,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x57, 0x6f, 0x72, 0x6b, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x37, 0x0a, 0x0b, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f,
	0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x48, 0x00, 0x52,
	0x0a, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x48, 0x61, 0x73, 0x68, 0x88, 0x01, 0x01, 0x12, 0x37,
	0x0a, 0x0b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x48, 0x01, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x48, 0x61, 0x73, 0x68, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x02, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c,
	0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x03, 0x52, 0x0a, 0x64, 0x69, 0x66, 0x66,
	0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x07, 0x74, 0x78, 0x5f,
	0x68, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x48, 0x04, 0x52,
	0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x6e, 0x6f,
	0x6e, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x48, 0x05, 0x52, 0x05, 0x6e, 0x6f, 0x6e,
	0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x06,
	0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a,
	0x08, 0x6d, 0x69, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x61,
	0x73, 0x68, 0x48, 0x07, 0x52, 0x07, 0x6d, 0x69, 0x78, 0x48, 0x61, 0x73, 0x68, 0x88, 0x01, 0x01,
	0x12, 0x17, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x48, 0x08,
	0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x37, 0x0a, 0x15, 0x70, 0x72, 0x69,
	0x6d, 0x65, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x75, 0x73, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x09, 0x52, 0x13, 0x70, 0x72, 0x69, 0x6d,
	0x65, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x75, 0x73, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x88,
	0x01, 0x01, 0x12, 0x35, 0x0a, 0x08, 0x63, 0x6f, 0x69, 0x6e, 0x62, 0x61, 0x73, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x48, 0x0a, 0x52, 0x08, 0x63, 0x6f,
	0x69, 0x6e, 0x62, 0x61, 0x73, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75,
	0x6c, 0x74, 0x79, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x42,
	0x08, 0x0a, 0x06, 0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6d, 0x69, 0x78, 0x5f, 0x68,
	0x61, 0x73, 0x68, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x18, 0x0a, 0x16,
	0x5f, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x75, 0x73, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63, 0x6f, 0x69, 0x6e, 0x62,
	0x61, 0x73, 0x65, 0x22, 0x55, 0x0a, 0x16, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x57, 0x6f, 0x72, 0x6b,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x3b, 0x0a,
	0x0a, 0x77, 0x6f, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x57,
	0x6f, 0x72, 0x6b, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52,
	0x09, 0x77, 0x6f, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x22, 0xe9, 0x03, 0x0a, 0x13, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x57, 0x6f, 0x72, 0x6b, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x6f,
	0x64, 0x79, 0x12, 0x2f, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x48, 0x00, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x88, 0x01, 0x01, 0x12, 0x41, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x48, 0x01, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x12, 0x3a, 0x0a, 0x06, 0x75, 0x6e, 0x63, 0x6c, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x57, 0x6f, 0x72, 0x6b, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x73, 0x48, 0x02, 0x52, 0x06, 0x75, 0x6e, 0x63, 0x6c, 0x65, 0x73, 0x88,
	0x01, 0x01, 0x12, 0x48, 0x0a, 0x10, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x03, 0x52, 0x0f, 0x65, 0x78, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x12, 0x35, 0x0a, 0x08,
	0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4d, 0x61, 0x6e, 0x69,
	0x66, 0x65, 0x73, 0x74, 0x48, 0x04, 0x52, 0x08, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x43, 0x0a, 0x10, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6c, 0x69, 0x6e, 0x6b,
	0x5f, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x61, 0x73, 0x68,
	0x65, 0x73, 0x48, 0x05, 0x52, 0x0f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6c, 0x69, 0x6e, 0x6b, 0x48,
	0x61, 0x73, 0x68, 0x65, 0x73, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x75, 0x6e, 0x63, 0x6c, 0x65, 0x73, 0x42,
	0x13, 0x0a, 0x11, 0x5f, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73,
	0x74, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6c, 0x69, 0x6e, 0x6b, 0x5f,
	0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x22, 0xda, 0x01, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x57, 0x6f, 0x72, 0x6b, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x3e, 0x0a, 0x09, 0x77, 0x6f,
	0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x57, 0x6f, 0x72, 0x6b, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x48, 0x00, 0x52, 0x08, 0x77,
	0x6f, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x38, 0x0a, 0x07, 0x77, 0x6f,
	0x5f, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x57, 0x6f, 0x72, 0x6b, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x48, 0x01, 0x52, 0x06, 0x77, 0x6f, 0x42, 0x6f, 0x64,
	0x79, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x02, 0x74, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x02, 0x52, 0x02, 0x74, 0x78, 0x88,
	0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x77, 0x6f, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x77, 0x6f, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x42, 0x05, 0x0a, 0x03,
	0x5f, 0x74, 0x78, 0x22, 0x4d, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x57, 0x6f, 0x72, 0x6b,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x39, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x5f,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x57, 0x6f, 0x72, 0x6b, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x22, 0x68, 0x0a, 0x18, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x57, 0x6f, 0x72, 0x6b, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x56, 0x69, 0x65, 0x77, 0x12, 0x3c,
	0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x57, 0x6f, 0x72, 0x6b, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x77,
	0x6f, 0x72, 0x6b, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x5f, 0x0a, 0x19,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x57, 0x6f, 0x72, 0x6b, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x56, 0x69, 0x65, 0x77, 0x12, 0x42, 0x0a, 0x0c, 0x77, 0x6f, 0x72,
	0x6b, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x57, 0x6f, 0x72,
	0x6b, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x56, 0x69, 0x65, 0x77,
	0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x22, 0x69, 0x0a,
	0x19, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x57, 0x6f, 0x72, 0x6b, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x56, 0x69, 0x65, 0x77, 0x12, 0x3c, 0x0a, 0x0b, 0x77, 0x6f,
	0x72, 0x6b, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x57, 0x6f, 0x72,
	0x6b, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x77, 0x6f, 0x72,
	0x6b, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x68, 0x0a, 0x18, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x57, 0x6f, 0x72, 0x6b, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x56, 0x69, 0x65, 0x77, 0x12, 0x3c, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x57, 0x6f, 0x72, 0x6b, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x48, 0x00, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x88,
	0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x22, 0x60, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x54, 0x75, 0x70, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x32, 0x0a, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x52, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x4b, 0x65, 0x79, 0x22, 0xdf, 0x02, 0x0a, 0x16, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x70, 0x74, 0x46, 0x6f, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12,
	0x2f, 0x0a, 0x14, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x6f, 0x72,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11, 0x70,
	0x6f, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x2e, 0x0a, 0x13, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x67,
	0x61, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x63,
	0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x47, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64,
	0x12, 0x2a, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x48, 0x61, 0x73, 0x68, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x3f, 0x0a, 0x10,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2e, 0x0a,
	0x04, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4c, 0x6f, 0x67, 0x73, 0x46, 0x6f, 0x72,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x12, 0x2c, 0x0a,
	0x04, 0x65, 0x74, 0x78, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x04, 0x65, 0x74, 0x78, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x67,
	0x61, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x67,
	0x61, 0x73, 0x55, 0x73, 0x65, 0x64, 0x22, 0x54, 0x0a, 0x17, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x73, 0x46, 0x6f, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x12, 0x39, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x46, 0x6f, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x73, 0x22, 0x83, 0x01, 0x0a,
	0x12, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4c, 0x6f, 0x67, 0x46, 0x6f, 0x72, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x29, 0x0a, 0x06, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x52, 0x06, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x44, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4c, 0x6f, 0x67, 0x73, 0x46,
	0x6f, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x6c, 0x6f, 0x67,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4c, 0x6f, 0x67, 0x46, 0x6f, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x22, 0x88, 0x01, 0x0a, 0x12, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x2b, 0x0a, 0x02, 0x77, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x57, 0x6f, 0x72, 0x6b, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x48, 0x00, 0x52, 0x02, 0x77, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x32, 0x0a, 0x07,
	0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x65, 0x72, 0x6d, 0x69,
	0x6e, 0x69, 0x48, 0x01, 0x52, 0x07, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x69, 0x88, 0x01, 0x01,
	0x42, 0x05, 0x0a, 0x03, 0x5f, 0x77, 0x6f, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x74, 0x65, 0x72, 0x6d,
	0x69, 0x6e, 0x69, 0x22, 0x76, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x65, 0x72, 0x6d,
	0x69, 0x6e, 0x69, 0x12, 0x32, 0x0a, 0x0b, 0x64, 0x6f, 0x6d, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x69,
	0x6e, 0x69, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x52, 0x0a, 0x64, 0x6f, 0x6d,
	0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x69, 0x12, 0x32, 0x0a, 0x0b, 0x73, 0x75, 0x62, 0x5f, 0x74,
	0x65, 0x72, 0x6d, 0x69, 0x6e, 0x69, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x52,
	0x0a, 0x73, 0x75, 0x62, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x69, 0x22, 0x40, 0x0a, 0x0b, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x45, 0x74, 0x78, 0x53, 0x65, 0x74, 0x12, 0x22, 0x0a, 0x0a, 0x65, 0x74,
	0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00,
	0x52, 0x09, 0x65, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x65, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x65, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x22, 0x8e, 0x01,
	0x0a, 0x10, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x45, 0x74,
	0x78, 0x73, 0x12, 0x33, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x57, 0x6f, 0x72, 0x6b, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x48, 0x00, 0x52, 0x06, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x04, 0x65, 0x74, 0x78, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48,
	0x01, 0x52, 0x04, 0x65, 0x74, 0x78, 0x73, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x65, 0x74, 0x78, 0x73, 0x22, 0xa8,
	0x01, 0x0a, 0x16, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x45,
	0x74, 0x78, 0x73, 0x52, 0x6f, 0x6c, 0x6c, 0x75, 0x70, 0x12, 0x33, 0x0a, 0x06, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x57, 0x6f, 0x72, 0x6b, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x48, 0x00, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x3e,
	0x0a, 0x0b, 0x65, 0x74, 0x78, 0x73, 0x5f, 0x72, 0x6f, 0x6c, 0x6c, 0x75, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x01, 0x52,
	0x0a, 0x65, 0x74, 0x78, 0x73, 0x52, 0x6f, 0x6c, 0x6c, 0x75, 0x70, 0x88, 0x01, 0x01, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x65, 0x74,
	0x78, 0x73, 0x5f, 0x72, 0x6f, 0x6c, 0x6c, 0x75, 0x70, 0x22, 0x35, 0x0a, 0x0a, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x54, 0x78, 0x49, 0x6e, 0x73, 0x12, 0x27, 0x0a, 0x06, 0x74, 0x78, 0x5f, 0x69, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x78, 0x49, 0x6e, 0x52, 0x05, 0x74, 0x78, 0x49, 0x6e, 0x73,
	0x22, 0x39, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x78, 0x4f, 0x75, 0x74, 0x73, 0x12,
	0x2a, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x6f, 0x75, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x78,
	0x4f, 0x75, 0x74, 0x52, 0x06, 0x74, 0x78, 0x4f, 0x75, 0x74, 0x73, 0x22, 0x95, 0x01, 0x0a, 0x09,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x78, 0x49, 0x6e, 0x12, 0x47, 0x0a, 0x12, 0x70, 0x72, 0x65,
	0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x4f, 0x75, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x10, 0x70,
	0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x4f, 0x75, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07, 0x70, 0x75, 0x62, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x48, 0x01, 0x52, 0x06, 0x70, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x88, 0x01, 0x01,
	0x42, 0x15, 0x0a, 0x13, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x6f, 0x75,
	0x74, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x70, 0x75, 0x62, 0x5f,
	0x6b, 0x65, 0x79, 0x22, 0x69, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x75, 0x74, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x48, 0x61, 0x73, 0x68, 0x48, 0x00, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x88, 0x01, 0x01,
	0x12, 0x19, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x48,
	0x01, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f,
	0x68, 0x61, 0x73, 0x68, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x93,
	0x01, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x78, 0x4f, 0x75, 0x74, 0x12, 0x27, 0x0a,
	0x0c, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x0c, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x01, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x48, 0x02, 0x52, 0x04, 0x6c, 0x6f, 0x63, 0x6b, 0x88, 0x01, 0x01, 0x42, 0x0f,
	0x0a, 0x0d, 0x5f, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x5f,
	0x6c, 0x6f, 0x63, 0x6b, 0x22, 0xb2, 0x01, 0x0a, 0x1c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x75,
	0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x48, 0x00, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x88, 0x01,
	0x01, 0x12, 0x19, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x48, 0x01, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0c,
	0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x48, 0x02, 0x52, 0x0c, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x64, 0x65, 0x6e,
	0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc6, 0x01, 0x0a, 0x15, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4f, 0x75, 0x74, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x12, 0x4a, 0x0a, 0x0a, 0x6f, 0x75, 0x74, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4f, 0x75, 0x74, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x2e, 0x4f, 0x75, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x6f, 0x75, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x1a,
	0x61, 0x0a, 0x0e, 0x4f, 0x75, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x39, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x4f, 0x75, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x44, 0x65, 0x6e, 0x6f, 0x6d,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0xae, 0x01, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x75, 0x74, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x4d, 0x61, 0x70, 0x12, 0x3f, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x75, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x4d, 0x61, 0x70, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x1a, 0x58, 0x0a, 0x0c, 0x45, 0x6e, 0x74,
	0x72, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x32, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4f,
	0x75, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x42, 0x33, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x64, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x6e, 0x74, 0x2d, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x65, 0x67, 0x69, 0x65, 0x73, 0x2f, 0x67, 0x6f, 0x2d, 0x71, 0x75, 0x61, 0x69, 0x2f, 0x63, 0x6f,
	0x72, 0x65, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_core_types_proto_block_proto_rawDescOnce sync.Once
	file_core_types_proto_block_proto_rawDescData = file_core_types_proto_block_proto_rawDesc
)

func file_core_types_proto_block_proto_rawDescGZIP() []byte {
	file_core_types_proto_block_proto_rawDescOnce.Do(func() {
		file_core_types_proto_block_proto_rawDescData = protoimpl.X.CompressGZIP(file_core_types_proto_block_proto_rawDescData)
	})
	return file_core_types_proto_block_proto_rawDescData
}

var file_core_types_proto_block_proto_msgTypes = make([]protoimpl.MessageInfo, 35)
var file_core_types_proto_block_proto_goTypes = []any{
	(*ProtoHeader)(nil),                  // 0: block.ProtoHeader
	(*ProtoTransaction)(nil),             // 1: block.ProtoTransaction
	(*ProtoTransactions)(nil),            // 2: block.ProtoTransactions
	(*ProtoHeaders)(nil),                 // 3: block.ProtoHeaders
	(*ProtoManifest)(nil),                // 4: block.ProtoManifest
	(*ProtoAccessList)(nil),              // 5: block.ProtoAccessList
	(*ProtoWorkObjectHeader)(nil),        // 6: block.ProtoWorkObjectHeader
	(*ProtoWorkObjectHeaders)(nil),       // 7: block.ProtoWorkObjectHeaders
	(*ProtoWorkObjectBody)(nil),          // 8: block.ProtoWorkObjectBody
	(*ProtoWorkObject)(nil),              // 9: block.ProtoWorkObject
	(*ProtoWorkObjects)(nil),             // 10: block.ProtoWorkObjects
	(*ProtoWorkObjectBlockView)(nil),     // 11: block.ProtoWorkObjectBlockView
	(*ProtoWorkObjectBlocksView)(nil),    // 12: block.ProtoWorkObjectBlocksView
	(*ProtoWorkObjectHeaderView)(nil),    // 13: block.ProtoWorkObjectHeaderView
	(*ProtoWorkObjectShareView)(nil),     // 14: block.ProtoWorkObjectShareView
	(*ProtoAccessTuple)(nil),             // 15: block.ProtoAccessTuple
	(*ProtoReceiptForStorage)(nil),       // 16: block.ProtoReceiptForStorage
	(*ProtoReceiptsForStorage)(nil),      // 17: block.ProtoReceiptsForStorage
	(*ProtoLogForStorage)(nil),           // 18: block.ProtoLogForStorage
	(*ProtoLogsForStorage)(nil),          // 19: block.ProtoLogsForStorage
	(*ProtoPendingHeader)(nil),           // 20: block.ProtoPendingHeader
	(*ProtoTermini)(nil),                 // 21: block.ProtoTermini
	(*ProtoEtxSet)(nil),                  // 22: block.ProtoEtxSet
	(*ProtoPendingEtxs)(nil),             // 23: block.ProtoPendingEtxs
	(*ProtoPendingEtxsRollup)(nil),       // 24: block.ProtoPendingEtxsRollup
	(*ProtoTxIns)(nil),                   // 25: block.ProtoTxIns
	(*ProtoTxOuts)(nil),                  // 26: block.ProtoTxOuts
	(*ProtoTxIn)(nil),                    // 27: block.ProtoTxIn
	(*ProtoOutPoint)(nil),                // 28: block.ProtoOutPoint
	(*ProtoTxOut)(nil),                   // 29: block.ProtoTxOut
	(*ProtoOutPointAndDenomination)(nil), // 30: block.ProtoOutPointAndDenomination
	(*ProtoAddressOutPoints)(nil),        // 31: block.ProtoAddressOutPoints
	(*ProtoOutPointsMap)(nil),            // 32: block.ProtoOutPointsMap
	nil,                                  // 33: block.ProtoAddressOutPoints.OutPointsEntry
	nil,                                  // 34: block.ProtoOutPointsMap.EntriesEntry
	(*common.ProtoHash)(nil),             // 35: common.ProtoHash
	(*common.ProtoLocation)(nil),         // 36: common.ProtoLocation
	(*common.ProtoAddress)(nil),          // 37: common.ProtoAddress
	(*common.ProtoHashes)(nil),           // 38: common.ProtoHashes
}
var file_core_types_proto_block_proto_depIdxs = []int32{
	35, // 0: block.ProtoHeader.parent_hash:type_name -> common.ProtoHash
	35, // 1: block.ProtoHeader.uncle_hash:type_name -> common.ProtoHash
	35, // 2: block.ProtoHeader.evm_root:type_name -> common.ProtoHash
	35, // 3: block.ProtoHeader.tx_hash:type_name -> common.ProtoHash
	35, // 4: block.ProtoHeader.etx_hash:type_name -> common.ProtoHash
	35, // 5: block.ProtoHeader.etx_rollup_hash:type_name -> common.ProtoHash
	35, // 6: block.ProtoHeader.manifest_hash:type_name -> common.ProtoHash
	35, // 7: block.ProtoHeader.receipt_hash:type_name -> common.ProtoHash
	36, // 8: block.ProtoHeader.location:type_name -> common.ProtoLocation
	35, // 9: block.ProtoHeader.mix_hash:type_name -> common.ProtoHash
	35, // 10: block.ProtoHeader.utxo_root:type_name -> common.ProtoHash
	35, // 11: block.ProtoHeader.etx_set_root:type_name -> common.ProtoHash
	35, // 12: block.ProtoHeader.etx_eligible_slices:type_name -> common.ProtoHash
	35, // 13: block.ProtoHeader.prime_terminus:type_name -> common.ProtoHash
	35, // 14: block.ProtoHeader.interlink_root_hash:type_name -> common.ProtoHash
	5,  // 15: block.ProtoTransaction.access_list:type_name -> block.ProtoAccessList
	35, // 16: block.ProtoTransaction.originating_tx_hash:type_name -> common.ProtoHash
	25, // 17: block.ProtoTransaction.tx_ins:type_name -> block.ProtoTxIns
	26, // 18: block.ProtoTransaction.tx_outs:type_name -> block.ProtoTxOuts
	35, // 19: block.ProtoTransaction.parent_hash:type_name -> common.ProtoHash
	35, // 20: block.ProtoTransaction.mix_hash:type_name -> common.ProtoHash
	1,  // 21: block.ProtoTransactions.transactions:type_name -> block.ProtoTransaction
	0,  // 22: block.ProtoHeaders.headers:type_name -> block.ProtoHeader
	35, // 23: block.ProtoManifest.manifest:type_name -> common.ProtoHash
	15, // 24: block.ProtoAccessList.access_tuples:type_name -> block.ProtoAccessTuple
	35, // 25: block.ProtoWorkObjectHeader.header_hash:type_name -> common.ProtoHash
	35, // 26: block.ProtoWorkObjectHeader.parent_hash:type_name -> common.ProtoHash
	35, // 27: block.ProtoWorkObjectHeader.tx_hash:type_name -> common.ProtoHash
	36, // 28: block.ProtoWorkObjectHeader.location:type_name -> common.ProtoLocation
	35, // 29: block.ProtoWorkObjectHeader.mix_hash:type_name -> common.ProtoHash
	37, // 30: block.ProtoWorkObjectHeader.coinbase:type_name -> common.ProtoAddress
	6,  // 31: block.ProtoWorkObjectHeaders.wo_headers:type_name -> block.ProtoWorkObjectHeader
	0,  // 32: block.ProtoWorkObjectBody.header:type_name -> block.ProtoHeader
	2,  // 33: block.ProtoWorkObjectBody.transactions:type_name -> block.ProtoTransactions
	7,  // 34: block.ProtoWorkObjectBody.uncles:type_name -> block.ProtoWorkObjectHeaders
	2,  // 35: block.ProtoWorkObjectBody.ext_transactions:type_name -> block.ProtoTransactions
	4,  // 36: block.ProtoWorkObjectBody.manifest:type_name -> block.ProtoManifest
	38, // 37: block.ProtoWorkObjectBody.interlink_hashes:type_name -> common.ProtoHashes
	6,  // 38: block.ProtoWorkObject.wo_header:type_name -> block.ProtoWorkObjectHeader
	8,  // 39: block.ProtoWorkObject.wo_body:type_name -> block.ProtoWorkObjectBody
	1,  // 40: block.ProtoWorkObject.tx:type_name -> block.ProtoTransaction
	9,  // 41: block.ProtoWorkObjects.work_objects:type_name -> block.ProtoWorkObject
	9,  // 42: block.ProtoWorkObjectBlockView.work_object:type_name -> block.ProtoWorkObject
	11, // 43: block.ProtoWorkObjectBlocksView.work_objects:type_name -> block.ProtoWorkObjectBlockView
	9,  // 44: block.ProtoWorkObjectHeaderView.work_object:type_name -> block.ProtoWorkObject
	9,  // 45: block.ProtoWorkObjectShareView.work_object:type_name -> block.ProtoWorkObject
	35, // 46: block.ProtoAccessTuple.storage_key:type_name -> common.ProtoHash
	35, // 47: block.ProtoReceiptForStorage.tx_hash:type_name -> common.ProtoHash
	37, // 48: block.ProtoReceiptForStorage.contract_address:type_name -> common.ProtoAddress
	19, // 49: block.ProtoReceiptForStorage.logs:type_name -> block.ProtoLogsForStorage
	2,  // 50: block.ProtoReceiptForStorage.etxs:type_name -> block.ProtoTransactions
	16, // 51: block.ProtoReceiptsForStorage.receipts:type_name -> block.ProtoReceiptForStorage
	37, // 52: block.ProtoLogForStorage.address:type_name -> common.ProtoAddress
	35, // 53: block.ProtoLogForStorage.topics:type_name -> common.ProtoHash
	18, // 54: block.ProtoLogsForStorage.logs:type_name -> block.ProtoLogForStorage
	9,  // 55: block.ProtoPendingHeader.wo:type_name -> block.ProtoWorkObject
	21, // 56: block.ProtoPendingHeader.termini:type_name -> block.ProtoTermini
	35, // 57: block.ProtoTermini.dom_termini:type_name -> common.ProtoHash
	35, // 58: block.ProtoTermini.sub_termini:type_name -> common.ProtoHash
	9,  // 59: block.ProtoPendingEtxs.header:type_name -> block.ProtoWorkObject
	2,  // 60: block.ProtoPendingEtxs.etxs:type_name -> block.ProtoTransactions
	9,  // 61: block.ProtoPendingEtxsRollup.header:type_name -> block.ProtoWorkObject
	2,  // 62: block.ProtoPendingEtxsRollup.etxs_rollup:type_name -> block.ProtoTransactions
	27, // 63: block.ProtoTxIns.tx_ins:type_name -> block.ProtoTxIn
	29, // 64: block.ProtoTxOuts.tx_outs:type_name -> block.ProtoTxOut
	28, // 65: block.ProtoTxIn.previous_out_point:type_name -> block.ProtoOutPoint
	35, // 66: block.ProtoOutPoint.hash:type_name -> common.ProtoHash
	35, // 67: block.ProtoOutPointAndDenomination.hash:type_name -> common.ProtoHash
	33, // 68: block.ProtoAddressOutPoints.out_points:type_name -> block.ProtoAddressOutPoints.OutPointsEntry
	34, // 69: block.ProtoOutPointsMap.entries:type_name -> block.ProtoOutPointsMap.EntriesEntry
	30, // 70: block.ProtoAddressOutPoints.OutPointsEntry.value:type_name -> block.ProtoOutPointAndDenomination
	31, // 71: block.ProtoOutPointsMap.EntriesEntry.value:type_name -> block.ProtoAddressOutPoints
	72, // [72:72] is the sub-list for method output_type
	72, // [72:72] is the sub-list for method input_type
	72, // [72:72] is the sub-list for extension type_name
	72, // [72:72] is the sub-list for extension extendee
	0,  // [0:72] is the sub-list for field type_name
}

func init() { file_core_types_proto_block_proto_init() }
func file_core_types_proto_block_proto_init() {
	if File_core_types_proto_block_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_core_types_proto_block_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ProtoHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_types_proto_block_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ProtoTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_types_proto_block_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ProtoTransactions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_types_proto_block_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ProtoHeaders); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_types_proto_block_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*ProtoManifest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_types_proto_block_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*ProtoAccessList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_types_proto_block_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*ProtoWorkObjectHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_types_proto_block_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*ProtoWorkObjectHeaders); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_types_proto_block_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*ProtoWorkObjectBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_types_proto_block_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*ProtoWorkObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_types_proto_block_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*ProtoWorkObjects); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_types_proto_block_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*ProtoWorkObjectBlockView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_types_proto_block_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*ProtoWorkObjectBlocksView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_types_proto_block_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*ProtoWorkObjectHeaderView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_types_proto_block_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*ProtoWorkObjectShareView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_types_proto_block_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*ProtoAccessTuple); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_types_proto_block_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*ProtoReceiptForStorage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_types_proto_block_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*ProtoReceiptsForStorage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_types_proto_block_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*ProtoLogForStorage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_types_proto_block_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*ProtoLogsForStorage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_types_proto_block_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*ProtoPendingHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_types_proto_block_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*ProtoTermini); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_types_proto_block_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*ProtoEtxSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_types_proto_block_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*ProtoPendingEtxs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_types_proto_block_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*ProtoPendingEtxsRollup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_types_proto_block_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*ProtoTxIns); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_types_proto_block_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*ProtoTxOuts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_types_proto_block_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*ProtoTxIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_types_proto_block_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*ProtoOutPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_types_proto_block_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*ProtoTxOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_types_proto_block_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*ProtoOutPointAndDenomination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_types_proto_block_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*ProtoAddressOutPoints); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_types_proto_block_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*ProtoOutPointsMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_core_types_proto_block_proto_msgTypes[0].OneofWrappers = []any{}
	file_core_types_proto_block_proto_msgTypes[1].OneofWrappers = []any{}
	file_core_types_proto_block_proto_msgTypes[6].OneofWrappers = []any{}
	file_core_types_proto_block_proto_msgTypes[8].OneofWrappers = []any{}
	file_core_types_proto_block_proto_msgTypes[9].OneofWrappers = []any{}
	file_core_types_proto_block_proto_msgTypes[11].OneofWrappers = []any{}
	file_core_types_proto_block_proto_msgTypes[13].OneofWrappers = []any{}
	file_core_types_proto_block_proto_msgTypes[14].OneofWrappers = []any{}
	file_core_types_proto_block_proto_msgTypes[20].OneofWrappers = []any{}
	file_core_types_proto_block_proto_msgTypes[22].OneofWrappers = []any{}
	file_core_types_proto_block_proto_msgTypes[23].OneofWrappers = []any{}
	file_core_types_proto_block_proto_msgTypes[24].OneofWrappers = []any{}
	file_core_types_proto_block_proto_msgTypes[27].OneofWrappers = []any{}
	file_core_types_proto_block_proto_msgTypes[28].OneofWrappers = []any{}
	file_core_types_proto_block_proto_msgTypes[29].OneofWrappers = []any{}
	file_core_types_proto_block_proto_msgTypes[30].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_core_types_proto_block_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   35,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_core_types_proto_block_proto_goTypes,
		DependencyIndexes: file_core_types_proto_block_proto_depIdxs,
		MessageInfos:      file_core_types_proto_block_proto_msgTypes,
	}.Build()
	File_core_types_proto_block_proto = out.File
	file_core_types_proto_block_proto_rawDesc = nil
	file_core_types_proto_block_proto_goTypes = nil
	file_core_types_proto_block_proto_depIdxs = nil
}
