// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.2
// source: p2p/node/peerManager/peerdb/peer_info.proto

package peerdb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProtoPeerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddrInfo  *ProtoAddrInfo `protobuf:"bytes,1,opt,name=addrInfo,proto3" json:"addrInfo,omitempty"`
	PubKey    []byte         `protobuf:"bytes,2,opt,name=pubKey,proto3" json:"pubKey,omitempty"`
	Entropy   uint64         `protobuf:"varint,3,opt,name=entropy,proto3" json:"entropy,omitempty"`
	Protected bool           `protobuf:"varint,4,opt,name=protected,proto3" json:"protected,omitempty"`
}

func (x *ProtoPeerInfo) Reset() {
	*x = ProtoPeerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p2p_node_peerManager_peerdb_peer_info_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoPeerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoPeerInfo) ProtoMessage() {}

func (x *ProtoPeerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_p2p_node_peerManager_peerdb_peer_info_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoPeerInfo.ProtoReflect.Descriptor instead.
func (*ProtoPeerInfo) Descriptor() ([]byte, []int) {
	return file_p2p_node_peerManager_peerdb_peer_info_proto_rawDescGZIP(), []int{0}
}

func (x *ProtoPeerInfo) GetAddrInfo() *ProtoAddrInfo {
	if x != nil {
		return x.AddrInfo
	}
	return nil
}

func (x *ProtoPeerInfo) GetPubKey() []byte {
	if x != nil {
		return x.PubKey
	}
	return nil
}

func (x *ProtoPeerInfo) GetEntropy() uint64 {
	if x != nil {
		return x.Entropy
	}
	return 0
}

func (x *ProtoPeerInfo) GetProtected() bool {
	if x != nil {
		return x.Protected
	}
	return false
}

type ProtoAddrInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID    string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Addrs []string `protobuf:"bytes,2,rep,name=Addrs,proto3" json:"Addrs,omitempty"`
}

func (x *ProtoAddrInfo) Reset() {
	*x = ProtoAddrInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p2p_node_peerManager_peerdb_peer_info_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoAddrInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoAddrInfo) ProtoMessage() {}

func (x *ProtoAddrInfo) ProtoReflect() protoreflect.Message {
	mi := &file_p2p_node_peerManager_peerdb_peer_info_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoAddrInfo.ProtoReflect.Descriptor instead.
func (*ProtoAddrInfo) Descriptor() ([]byte, []int) {
	return file_p2p_node_peerManager_peerdb_peer_info_proto_rawDescGZIP(), []int{1}
}

func (x *ProtoAddrInfo) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *ProtoAddrInfo) GetAddrs() []string {
	if x != nil {
		return x.Addrs
	}
	return nil
}

var File_p2p_node_peerManager_peerdb_peer_info_proto protoreflect.FileDescriptor

var file_p2p_node_peerManager_peerdb_peer_info_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x70, 0x32, 0x70, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x2f, 0x70, 0x65, 0x65, 0x72, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x70, 0x65, 0x65, 0x72, 0x64, 0x62, 0x2f, 0x70, 0x65,
	0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x70,
	0x65, 0x65, 0x72, 0x64, 0x62, 0x22, 0x92, 0x01, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50,
	0x65, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x31, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x65, 0x65, 0x72,
	0x64, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x08, 0x61, 0x64, 0x64, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75,
	0x62, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x70, 0x75, 0x62, 0x4b,
	0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x6f, 0x70, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x6f, 0x70, 0x79, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x22, 0x35, 0x0a, 0x0d, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41,
	0x64, 0x64, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x41, 0x64, 0x64, 0x72,
	0x73, 0x42, 0x3b, 0x5a, 0x39, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x64, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x6e, 0x74, 0x2d, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67,
	0x69, 0x65, 0x73, 0x2f, 0x67, 0x6f, 0x2d, 0x71, 0x75, 0x61, 0x69, 0x2f, 0x70, 0x65, 0x65, 0x72,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x70, 0x65, 0x65, 0x72, 0x64, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_p2p_node_peerManager_peerdb_peer_info_proto_rawDescOnce sync.Once
	file_p2p_node_peerManager_peerdb_peer_info_proto_rawDescData = file_p2p_node_peerManager_peerdb_peer_info_proto_rawDesc
)

func file_p2p_node_peerManager_peerdb_peer_info_proto_rawDescGZIP() []byte {
	file_p2p_node_peerManager_peerdb_peer_info_proto_rawDescOnce.Do(func() {
		file_p2p_node_peerManager_peerdb_peer_info_proto_rawDescData = protoimpl.X.CompressGZIP(file_p2p_node_peerManager_peerdb_peer_info_proto_rawDescData)
	})
	return file_p2p_node_peerManager_peerdb_peer_info_proto_rawDescData
}

var file_p2p_node_peerManager_peerdb_peer_info_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_p2p_node_peerManager_peerdb_peer_info_proto_goTypes = []interface{}{
	(*ProtoPeerInfo)(nil), // 0: peerdb.ProtoPeerInfo
	(*ProtoAddrInfo)(nil), // 1: peerdb.ProtoAddrInfo
}
var file_p2p_node_peerManager_peerdb_peer_info_proto_depIdxs = []int32{
	1, // 0: peerdb.ProtoPeerInfo.addrInfo:type_name -> peerdb.ProtoAddrInfo
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_p2p_node_peerManager_peerdb_peer_info_proto_init() }
func file_p2p_node_peerManager_peerdb_peer_info_proto_init() {
	if File_p2p_node_peerManager_peerdb_peer_info_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_p2p_node_peerManager_peerdb_peer_info_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoPeerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p2p_node_peerManager_peerdb_peer_info_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoAddrInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_p2p_node_peerManager_peerdb_peer_info_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_p2p_node_peerManager_peerdb_peer_info_proto_goTypes,
		DependencyIndexes: file_p2p_node_peerManager_peerdb_peer_info_proto_depIdxs,
		MessageInfos:      file_p2p_node_peerManager_peerdb_peer_info_proto_msgTypes,
	}.Build()
	File_p2p_node_peerManager_peerdb_peer_info_proto = out.File
	file_p2p_node_peerManager_peerdb_peer_info_proto_rawDesc = nil
	file_p2p_node_peerManager_peerdb_peer_info_proto_goTypes = nil
	file_p2p_node_peerManager_peerdb_peer_info_proto_depIdxs = nil
}
